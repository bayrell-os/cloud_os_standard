<!--
 *  Bayrell Cloud OS
 *
 *  (c) Copyright 2020 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
-->

<class version="1.0"
	name="Bayrell.CloudOS.Page.SpacesPage" extends="Runtime.Web.CRUD.CrudPage" 
	module="Bayrell.CloudOS" model="Runtime.Web.CRUD.CrudPageModel"
>

<use name="Runtime.lib" />
<use name="Runtime.BaseStruct" />
<use name="Runtime.Exceptions.RuntimeException" />
<use name="Runtime.Core.Message" />
<use name="Runtime.Core.RemoteCallAnswer" />
<use name="Runtime.Web.LayoutModel" />
<use name="Runtime.Web.RenderContainer" />
<use name="Runtime.Web.RenderDriver" />
<use name="Runtime.Web.Route" />
<use name="Runtime.Web.RouteList" />
<use name="Runtime.Web.RouteMiddleware" />
<use name="Runtime.Web.Events.MouseClickEvent" />
<use name="Runtime.Web.CRUD.CrudPage" component="true" />
<use name="Runtime.Web.CRUD.CrudPageModel" />
<use name="Runtime.Web.CRUD.FieldInfo" />
<use name="Runtime.Web.Input.Input" component="true" />
<use name="Runtime.Web.Input.Label" component="true" />
<use name="Runtime.Web.Input.Select" component="true" />
<use name="Runtime.Web.Input.SelectText" component="true" />
<use name="Runtime.Web.Table.TableModel" />


<script>


/**
 * Returns object name
 */
pure string getCrudObjectName() => "Bayrell.CloudOS.Space";



/**
 * Route Action
 * @return RenderContainer
 */
@Route{ "uri": "/admin/spaces/", "name": "app.admin.spaces" }
static async RenderContainer actionIndex(RenderContainer container) => [
	container
		
		/* Set title */
		|> lib::setAttr(["layout", "title"], "Spaces")
		|> lib::setAttr(["layout", "layout_name"], "admin")
		
		/* Set model */
		|> lib::setAttr(["layout", "page_class"], classof SpacesPage)
		|> lib::setAttr(["layout", "page_model"], new CrudPageModel())
		
		/* Make api request */
		|> await static::crudSearch
];



/**
 * Returns options
 */
pure Collection getOptions(BaseStruct layout, CrudPageModel model, Dict params, string name = "")
{
	return parent::getOptions(layout, model, params, name);
}



/**
 * Returns crud struct
 */
pure Collection<FieldInfo> getStruct(BaseStruct layout, CrudPageModel model, Dict params) =>
[
	new FieldInfo
	{
		"api_name": "space_id",
		"primary": true,
	},
	
	new FieldInfo
	{
		"api_name": "number",
		"label": "",
		"class_name": classof Label,
	},
	
	new FieldInfo
	{
		"api_name": "api_name",
		"label": "Api name",
		"class_name": classof Input,
		"info":
		{
			"table":
			{
				"class_name": classof Label,
			},
		},
	},
	
	new FieldInfo
	{
		"api_name": "name",
		"label": "Space name",
		"class_name": classof Input,
		"info":
		{
			"table":
			{
				"class_name": classof Label,
			},
		},
	},
	
	new FieldInfo
	{
		"api_name": "edit-buttons",
		"label": "",
		"class_name": classof Label,
		"info":
		{
			"table":
			{
				"render": method static::renderButtons,
			},
		},
	},
];



/**
 * Returns filter fields
 */
pure Collection<string> getFilterFields(BaseStruct layout, CrudPageModel model, Dict params) =>
[
	"api_name",
	"name",
];



/**
 * Returns form fields
 */
pure Collection<string> getFormFields(BaseStruct layout, CrudPageModel model, Dict params) =>
[
	"api_name",
	"name",
];



/**
 * Returns table fields
 */
pure Collection<string> getTableFields(BaseStruct layout, CrudPageModel model, Dict params) =>
[
	"number",
	"api_name",
	"name",
	"edit-buttons"
];



/**
 * Returns view fields
 */
pure Collection<string> getViewFields(BaseStruct layout, CrudPageModel model, Dict params) =>
[
];



/**
 * Returns messages
 */
pure Dict<string> getMessages() =>
{
	"add": _("Bayrell.TimePlanner", "Add space"),
	"delete": string (Dict item) =>
		_("Runtime.Web.CRUD", "Do you realy want to delete '%name%' ?", { "name": item["space_name"] } ),
};



/**
 * Dialog settings
 */
pure Dict getDialogSettings() =>
{
};



/**
 * Form settings
 */
pure Dict getFormSettings() =>
{
};

</script>



</class>