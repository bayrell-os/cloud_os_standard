/*!
 *  Bayrell Cloud OS
 *
 *  (c) Copyright 2020-2023 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Bayrell.CloudOS.Console.Commands;

use Runtime.io;
use Runtime.Console.BaseCommand;
use Runtime.Console.CommandsList;
use Bayrell.CloudOS.Backend.Lib.DockerApi;
use Bayrell.CloudOS.Backend.Lib.DockerService;


class UpdateServices extends BaseCommand
{
	
	/**
	 * Returns name
	 */
	static string getName() => "docker:services:update";
	
	
	/**
	 * Returns description
	 */
	static string getDescription() => "Update services";
	
	
	/**
	 * Run task
	 */
	async static int run()
	{
		int timestamp = rtl::time();
		
		Collection services = DockerApi::getServices();
		Collection nodes = DockerApi::getNodes();
		
		for (int i=0; i<services.count(); i++)
		{
			Dict service = services.get(i);
			await DockerService::update(service, timestamp);
		}
		
		await DockerService::removeOldServices(timestamp);
		
		return static::SUCCESS;
	}
	
	
}