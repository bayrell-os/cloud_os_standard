/*!
 *  Bayrell Cloud OS
 *
 *  (c) Copyright 2020-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Bayrell.CloudOS.Backend.Hooks;

use Runtime.Context;
use Runtime.Hooks.RuntimeHook as BaseRuntimeHook;
use Runtime.ORM.Provider;
use Runtime.ORM.SQLite.ConnectionSQLite;


class RuntimeHook extends BaseRuntimeHook
{
	/**
	 * Register hooks
	 */
	void register_hooks()
	{
		this.register( static::START );
	}
	
	
	/**
	 * Start context
	 */
	async Dict start(Dict d)
	{
		Provider provider = @.provider("Runtime.ORM.Provider");
		
		/* Connect to database */
		ConnectionSQLite conn = new ConnectionSQLite("default");
		conn.database = "/data/db/cloud_os.db";
		await conn.connect();
		
		/* Set journal_mode wal */
		conn.executeSQL("PRAGMA journal_mode = WAL;");
		
		/* Add connection */
		provider.addConnection(conn);
		
		return d;
	}
}