/*!
 *  Bayrell Cloud OS
 *
 *  (c) Copyright 2020-2023 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Bayrell.CloudOS.Hooks;

use Runtime.re;
use Runtime.ModelProxy;
use Runtime.Web.AppHook as BaseAppHook;
use Runtime.Web.RenderContainer;
use Runtime.Web.Response;


class AppHook extends BaseAppHook
{
	
	/**
	 * Register hooks
	 */
	void register_hooks()
	{
		#ifdef BACKEND then
		this.registerMethod( static::RENDER_HEAD, "render_css", 9999 );
		this.registerMethod( static::RENDER_FOOTER, "render_footer" );
		#endif
		
		this.register( static::CSS_VARS );
		this.register( static::CSS_CLASS_NAMES );
		this.register( static::INIT_LAYOUT );
		this.register( static::LAYOUT_PAGE_CLASS_NAME );
		this.registerMethod( static::CALL_ROUTE_AFTER, "page_not_found", 9999 );
	}
	
	
	/**
	 * Get css vars
	 */
	Dict css_vars(Dict d)
	{
		d <= color_primary <= "#337ab7";
		d <= color_danger <= "#d14b42";
		d <= color_success <= "#090";
		d <= color_selected <= "#337ab7";
		d <= color_selected_background <= "#fff";
		d <= color_border <= "#e7e7e7";
		d <= color_hover <= "#eee";
		d <= color_table_border <= "#ccc";
		d <= color_table_hover <= "#eee";
		d <= color_table_selected <= "#337ab7";
		return d;
	}
	
	
	/**
	 * Returns render css
	 */
	Dict render_css(Dict d)
	{
		d <= classes <= d["classes"].concat([
			"Bayrell.CloudOS.Components.CSS",
		]);
		
		return d;
	}
	
	
	/**
	 * Returns render footer
	 */
	Dict render_footer(Dict d)
	{
		d <= classes <= d["classes"].concat([
			"Bayrell.CloudOS.Components.Scripts",
		]);
		
		return d;
	}
	
	
	/**
	 * Get css class names
	 */
	Dict css_class_names(Dict d)
	{
		d["css_class_names"].prependValue("Bayrell.CloudOS.Components.CSS");
		return d;
	}
	
	
	/**
	 * Returns layout class name
	 */
	Map layout_page_class_name(Map d)
	{
		d <= default <= "Bayrell.CloudOS.Components.DefaultLayout";
		return d;
	}
	
	
	/**
	 * Init layout
	 */
	async Dict init_layout(Dict d)
	{
		RenderContainer container = d["container"];
		string host = container.request.host;
		ModelProxy layout = container.layoutProxy();
		ModelProxy seo = layout.proxy(["models", "seo"]);
		
		seo.setAttr("site_name", "Cloud OS");
		seo.setAttr("title_ext", "Cloud OS");
		
		return d;
	}
	
	
	/**
	 * Call route after
	 */
	async Dict page_not_found(Dict d)
	{
		RenderContainer container = d["container"];
		Response response = container.response;
		
		if (response != null) return d;
		
		await container.callMethod(["Bayrell.CloudOS.Components.NotFoundRoute", "actionIndex"]);
		
		return d;
	}
	
}