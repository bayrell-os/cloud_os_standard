<!--
 *  Bayrell Cloud OS
 *
 *  (c) Copyright 2020-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
-->

<class name="Bayrell.CloudOS.Frontend.Applications.ApplicationsPage">

<use name="Runtime.DateTime" />
<use name="Runtime.Widget.Table.Table" component="true" />


<style>
.application_page %(Table)widget_table__tr{
	cursor: pointer;
}
.application_table{
	display: flex;
	align-items: flex-start;
}
.application_table %(Table)widget_table{
	position: relative;
	width: calc(100% - 400px);
}
.application_table .application_info{
	width: 400px;
	padding-left: 10px;
}
.application_info{
	padding-left: 10px;
}
.application_info__name{
	font-weight: bold;
	text-align: center;
}
.application_info__row{
	padding-top: 10px;
	padding-bottom: 10px;
	border-bottom: 1px #ccc solid;
}
.application_info__row:first-child{
	padding-top: 0px;
}
.application_info__row:last-child{
	padding-bottom: 0px;
	border-bottom: 0px;
}
.application_info__item{
	padding-bottom: 5px;
}
</style>


<template name="renderAppInfo">
	<div class="application_info">
		%set Dict item = this.model.table.getItemByRowNumber(this.model.info_row_number);
		%if (item != null)
		{
			<div class="application_info__name">{{ item["stack_name"] ~ "_" ~ item["name"] }}</div>
			%set Collection docker_tasks = item.get("docker_tasks");
			%if (docker_tasks)
			{
				%set docker_tasks = this.updateDockerTasks(docker_tasks);
				%for (int i=0; i<docker_tasks.count(); i++)
				{
					%set Dict task = docker_tasks.get(i);
					<div class="application_info__row">
						<div class="application_info__item">
							{{ "ID: " ~ task["ID"] }}
						</div>
						<div class="application_info__item">
							{{ "State: " ~ task["Status", "State"] }}
						</div>
						<div class="application_info__item">
							{{ "DesiredState: " ~ task["DesiredState"] }}
						</div>
						<div class="application_info__item">
							{{ "Updated: " ~
								task["UpdatedAt"].shiftOffset(0).getDateTimeString() ~ " UTC" }}
						</div>
						%set string error = task["Status", "Err"];
						%if (error)
						{
							<div class="application_info__item">
								{{ "Error: " ~ task["Status", "Err"] }}
							</div>
						}
					</div>
				}
			}
		}
	</div>
</template>


<template>
	<div class="application_page">
		%render this.renderWidget(this.model.top_buttons);
		<div class="application_table">
			%render this.renderWidget(this.model.table);
			%render this.renderAppInfo();
		</div>
	</div>
</template>


<script>

/**
 * Update docker tasks
 */
Vector updateDockerTasks(Vector docker_tasks)
{
	docker_tasks = docker_tasks.copy();
	
	for (int i=0; i<docker_tasks.count(); i++)
	{
		Map task = docker_tasks[i].copy();
		
		DateTime CreatedAt = DateTime::fromString(rs::substr(task.get("CreatedAt"), 0, 19));
		DateTime UpdatedAt = DateTime::fromString(rs::substr(task.get("UpdatedAt"), 0, 19));
		
		CreatedAt.tz = "UTC";
		UpdatedAt.tz = "UTC";
				
		task.set("CreatedAt", CreatedAt);
		task.set("UpdatedAt", UpdatedAt);
		
		docker_tasks.set(i, task);
	}
	
	docker_tasks = docker_tasks.sort(
		int (Dict a, Dict b)
		{
			int time_a = a.get("UpdatedAt").getTimestamp();
			int time_b = b.get("UpdatedAt").getTimestamp();
			return time_b - time_a;
		}
	);
	
	return docker_tasks;
}

</script>

</class>