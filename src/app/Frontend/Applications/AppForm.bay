<!--
 *  Bayrell Cloud OS
 *
 *  (c) Copyright 2020-2023 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
-->

<class name="Bayrell.CloudOS.Frontend.Applications.AppForm"
	extends="Runtime.Widget.Form.Form"
>

<use name="Runtime.Web.BaseModel" />
<use name="Runtime.Widget.Input" component="true" />
<use name="Runtime.Widget.Tab.Tab" component="true" />
<use name="Runtime.Widget.Tab.Tabs" component="true" />
<use name="Runtime.Widget.Tab.TabsModel" />


<style>
.app_variables{
	margin-right: 20px;
}
</style>


<template name="renderVariables">
	%set Vector variables = this.model.storage.item.get('variables');
	<div class="app_variables">
		%for (int i=0; i<variables.count(); i++)
		{
			%set Map variable = variables.get(i);
			%set Map variable_name = variable.get('name');
			%set Map variable_label = variable.get('label');
			%set Map variable_value = variable.get('value');
			%if (
				variable_name != "_var_app_name_" and
				variable_name != "_var_service_name_"
			)
			{
				<div class="widget_form__row" @key={{ variable_name }} data-name={{ variable_name }}>
					<label class="widget_form__row_label">{{ variable_label }}</label>
					<div class="widget_form__field">
						<Input name={{ variable_name }}
							value={{ variable_value }}
							@event:onChange={{ this.onChangeVariable(i, variable_name) }}
						/>
					</div>
				</div>
			}
		}
	</div>
</template>


<template name="renderWidgets">
</template>


<template name="renderWidgetsInfo">
	
	%set string component = "";
	%set BaseModel widget = null;
	
	<h2>Modificators</h2>
	<div class="d-flex">
		<div class="w-50">
			%render this.renderVariables();
		</div>
		<div class="w-50">
			%set widget = this.model.getWidget('modificators');
			%set component = widget.component;
			<{component} @model={{ widget }} />
		</div>
	</div>
	<div class="d-flex">
		<div class="w-50">
			<h2>Environments</h2>
			%set widget = this.model.getWidget('environments');
			%set component = widget.component;
			<{component} @model={{ widget }} />
		</div>
		<div class="w-50">
			<h2>Volumes</h2>
			%set widget = this.model.getWidget('volumes');
			%set component = widget.component;
			<{component} @model={{ widget }} />
		</div>
	</div>
	
</template>


<template name="renderForm">
	<form method="POST"
		enctype="multipart/form-data" onsubmit="return false;"
	>
		<Tabs @model={{ this.tabs }}>
			<Tab name="info" @model={{ this.tabs }}>
				%render this.renderContent();
				%render this.renderWidgetsInfo();
			</Tab>
			<Tab name="custom_patch" @model={{ this.tabs }}>
				Custom patch
			</Tab>
			<Tab name="total_patches" @model={{ this.tabs }}>
				Total patches
			</Tab>
			<Tab name="result" @model={{ this.tabs }}>
				Result
			</Tab>
			<Tab name="yaml" @model={{ this.tabs }}>
				Yaml
			</Tab>
		</Tabs>
	</form>
</template>


<script>

TabsModel tabs = new TabsModel{
	"active": "info",
	"tabs": [
		{
			"name": "info",
			"label": "Info",
		},
		{
			"name": "custom_patch",
			"label": "Custom patch",
		},
		{
			"name": "total_patches",
			"label": "Total patches",
		},
		{
			"name": "result",
			"label": "Result",
		},
		{
			"name": "yaml",
			"label": "Yaml",
		},
	],
};

void onChangeVariable(int i, string variable_name)
{
	return void (var e) use (i)
	{
		string value = e.target.value;
		Vector variables = this.model.storage.item.get('variables');
		Map variable = variables.get(i);
		variable.set("value", value);
	};
}

</script>


</class>