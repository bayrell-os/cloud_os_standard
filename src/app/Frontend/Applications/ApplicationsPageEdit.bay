<!--
 *  Bayrell Cloud OS
 *
 *  (c) Copyright 2020-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
-->

<class name="Bayrell.CloudOS.Frontend.Applications.ApplicationsPageEdit">

<use name="Runtime.Widget.Form.FormRow" component="true" />
<use name="Runtime.Widget.Tab.Tabs" component="true" />
<use name="Runtime.Widget.Button" component="true" />
<use name="Runtime.Widget.Input" component="true" />
<use name="Runtime.Widget.RowButtons" component="true" />
<use name="Runtime.Widget.WidgetResult" component="true" />
<use name="Runtime.Widget.CodeMirror.CodeMirror" component="true" />

<style>
.application_page__buttons{
	display: flex;
	align-items: center;
	margin-bottom: 10px;
	%(WidgetResult)widget_result{
		margin-left: 10px;
	}
}
.application_page__title{
	font-size: 20px;
	font-weight: bold;
	margin: 15px 0px;
}
.application_page__row{
	display: flex;
}
.application_page__row_item{
	width: 50%
}
.app_variables{
	margin-right: 20px;
}
.app_variables_row{
	margin-bottom: 10px;
}
.app_variables_row_label{
	margin-bottom: 5px;
}
.application_patches{
	display: flex;
	&__items{
		width: 200px;
		padding-right: 20px;
	}
	&__item{
		padding: 5px 10px;
		cursor: pointer;
	}
	&__item--active{
		background-color: var(--widget-color-selected);
		color: var(--widget-color-selected-text);
	}
	&__content{
		width: calc(100% - 200px);
	}
}
</style>


<template name="renderVariables">
	%set Vector variables = this.model.form.item.get("variables");
	%if (variables != null)
	{
		%for (int i=0; i<variables.count(); i++)
		{
			%set Map variable = variables.get(i);
			%set Map variable_name = variable.get("name");
			%set Map variable_label = variable.get("label");
			%set Map variable_value = variable.get("value");
			%if (
				variable_name != "_var_app_name_" and
				variable_name != "_var_service_name_"
			)
			{
				<div class="app_variables_row">
					<div class="app_variables_row_label">{{ variable_label }}</div>
					<div class="app_variables_row_content">
						<Input name={{ variable_name }}
							value={{ variable_value }}
							@event:valueChange={{
								void (var message) use (i, variable_name)
								{
									Vector variables = this.model.form.item.get('variables');
									Map variable = variables.get(i);
									variable.set("value", message.value);
								}
							}}
						/>
					</div>
				</div>
			}
		}
	}
</template>


<template name="renderModificators">
	<div class="application_page__title">Modificators</div>
	<div class="application_page__row">
		<div class="application_page__row_item app_variables">
			%render this.renderVariables();
		</div>
		<div class="application_page__row_item">
			%render this.renderWidget(this.model.modificators);
		</div>
	</div>
	<div class="application_page__row">
		<div class="application_page__row_item">
			<div class="application_page__title">Environments</div>
			%render this.renderWidget(this.model.environments);
		</div>
		<div class="application_page__row_item">
			<div class="application_page__title">Volumes</div>
			%render this.renderWidget(this.model.volumes);
		</div>
	</div>
</template>


<template name="renderPatches">
	%set Vector patches = this.model.form.item.get("patches");
	<div class="application_patches">
		<div class="application_patches__items">
		%if (patches != null)
		{
			%for (int i=0; i<patches.count(); i++)
			{
				%set Dict item = patches.get(i);
				<div class="application_patches__item" @key={{ i }} data-index={{ i }}
					class={{ this.patch_selected == i ? "application_patches__item--active" : "" }}
					@event:onClick={{
						void (var e) use (i)
						{
							this.patch_selected = i;
						}
					}}
				>
					{{ item.get("name") }}
				</div>
			}
		}
		</div>
		<div class="application_patches__content">
		%if (this.patch_selected >= 0 and this.patch_selected < patches.count())
		{
			%set Dict item = patches.get(this.patch_selected);
			<CodeMirror @ref="code_mirror_total_patches"
				value={{ item.get("content") }} readonly="true" height="500px"
			/>
		}
		</div>
	</div>
</template>


<template>
	<div class="application_page">
		<div class="application_page__buttons">
			%render this.renderWidget(this.model.top_buttons);
			%render this.renderWidget(this.model.form.result);
		</div>
		%render this.renderWidget(this.model.compose_dialog);
		%if (this.model.form.load.isSuccess())
		{
			<Tabs model={{ this.model.tabs }}>
				<slot name="info">
					%render this.renderWidget(this.model.form);
					%render this.renderModificators();
				</slot>
				<slot name="custom_patch">
					<CodeMirror
						@event:onValueChange={{
							void (var message)
							{
								this.model.form.item.set("custom_patch", message.value);
							}
						}}
						value={{ this.model.form.item.get("custom_patch") }}
						height="500px"
						timeout="100"
					/>
				</slot>
				<slot name="total_patches">
					%render this.renderPatches();
				</slot>
				<slot name="result">
					<CodeMirror
						value={{ this.model.form.item.get("content") }}
						readonly="true" height="500px"
					/>
				</slot>
				<slot name="yaml">
					<CodeMirror
						value={{ this.model.form.item.get("yaml") }}
						readonly="true" height="500px"
					/>
				</slot>
			</Tabs>
		}
	</div>
</template>


<script>

int patch_selected = -1;

</script>

</class>