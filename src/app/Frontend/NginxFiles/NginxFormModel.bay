/*!
 *  Bayrell Cloud OS
 *
 *  (c) Copyright 2020-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Bayrell.CloudOS.Frontend.NginxFiles;

use Runtime.Widget.ButtonModel;
use Runtime.Widget.Input;
use Runtime.Widget.RowButtons;
use Runtime.Widget.RowButtonsModel;
use Runtime.Widget.Select;
use Runtime.Widget.TextArea;
use Runtime.Widget.CodeMirror.CodeMirror;
use Runtime.Widget.Crud.CrudApiStorage;
use Runtime.Widget.Form.FormModel;


class NginxFormModel extends FormModel
{	
	/**
	 * Create data storage
	 */
	CrudApiStorage createDataStorage() => new CrudApiStorage{
		"layout": this.layout,
		"class_name": "app.nginx_files",
		"primary_keys": ["id"],
	};
	
	
	/**
	 * Init widget settings
	 */
	void initWidget()
	{
		parent();
		
		/* Field name */
		this.addField({
			"name": "name",
			"label": "Name",
			"component": classof Input,
		});
		
		/* Field container name */
		this.addField({
			"name": "enable",
			"label": "Enable",
			"component": classof Select,
			"props": {
				"options": [
					{"label": "No", "value": "0"},
					{"label": "Yes", "value": "1"},
				],
			},
		});
		
		/* Field name */
		this.addField({
			"name": "content",
			"label": "Content",
			"component": classof CodeMirror,
			"props": {
				"height": "450px",
			},
		});
		this.layout.addComponent(classof CodeMirror);
	}
	
	
	/**
	 * Get page title
	 */
	string getPageTitle(string action = "")
	{
		if (action == "add")
		{
			return "Add nginx file";
		}
		if (action == "edit")
		{
			return "Edit nginx file " ~ this.storage.item.get("name");
		}
		if (action == "delete")
		{
			return "Delete nginx file " ~ this.storage.item.get("name");
		}
		return "";
	}
}