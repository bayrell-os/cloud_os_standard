/*!
 *  Bayrell Cloud OS
 *
 *  (c) Copyright 2020-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Bayrell.CloudOS.Frontend.Domains;

use Runtime.Callback;
use Runtime.Entity.Factory;
use Runtime.Web.BasePageModel;
use Runtime.Web.ModelFactory;
use Runtime.Web.RenderContainer;
use Runtime.Web.Messages.ClickMessage;
use Runtime.Widget.ButtonModel;
use Runtime.Widget.RowButtonsModel;
use Runtime.Widget.SelectModel;
use Runtime.Widget.Form.FormModel;
use Runtime.Widget.Table.RouteTableModel;
use Bayrell.CloudOS.Frontend.Domains.DomainPage;
use Bayrell.CloudOS.Frontend.Domains.DomainTableModel;


class DomainPageModel extends BasePageModel
{
	string component = classof DomainPage;
	RouteTableModel domains = null;
	
	
	/**
	 * Init widget settings
	 */
	void initWidget(Dict params)
	{
		parent(params);
		
		/* Add domains */
		this.domains = this.addWidget(
			classof DomainTableModel,
			{
				"widget_name": "domains",
			}
		);
		
		/* Edit button */
		RowButtonsModel row_buttons = this.domains.table.getWidget("row_buttons");
		ButtonModel edit_button = row_buttons.getWidget("edit_button");
		edit_button.clearListener("click");
		edit_button.href = string (Dict data)
		{
			Dict item = data.get("item");
			return this.layout.url("app:domains:edit", {"id": item.get("id")});
		};
	}
	
	
	/**
	 * Build title
	 */
	void buildTitle(RenderContainer container)
	{
		this.layout.setPageTitle("List of domains");
	}
}