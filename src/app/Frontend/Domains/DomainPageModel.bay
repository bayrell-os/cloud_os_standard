/*!
 *  Bayrell Cloud OS
 *
 *  (c) Copyright 2020-2023 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Bayrell.CloudOS.Frontend.Domains;

use Runtime.Web.PageModel;
use Runtime.Widget.RenderListModel;
use Runtime.Widget.Crud.CrudPageModel;
use Bayrell.CloudOS.Frontend.Domains.DomainFormModel;
use Bayrell.CloudOS.Frontend.Domains.DomainTableModel;
use Bayrell.CloudOS.Frontend.Routes.RouteTableModel;


class DomainPageModel extends CrudPageModel
{
	/**
	 * Constructor
	 */
	void constructor(Dict params = null)
	{
		parent(params);
		
		if (this.layout.route.name == "app:domains:index")
		{
			/* Set action */
			this.setAction("index");
			
			/* Create table widget */
			DomainTableModel table = new DomainTableModel{
				"parent_widget": this
			};
			
			/* Set page */
			table.storage.setPage(this.layout.request_query.get("page", 1));
		}
		
		else if (this.layout.route.name == "app:domains:edit")
		{
			/* Set action */
			this.setAction("edit");
			
			/* Create form widget */
			DomainFormModel form = new DomainFormModel{
				"action": "edit",
				"parent_widget": this
			};
			
			/* Create routes table widget */
			RouteTableModel route_table = new RouteTableModel{
				"parent_widget": this
			};
			/*route_table.removeField("space_name");*/
			route_table.storage.setPage(1);
			
			/* Add table to render list */
			RenderListModel render_list = this.getWidget("render_list");
			render_list.addRender(route_table.getWidgetName());
			
			/* Set form id */
			form.storage.setPrimaryKey({
				"id": this.layout.route.matches.get("id"),
			});
			route_table.storage.setPostData("domain_id", form.storage.item_pk.get("id"));
			
		}
	}
	
	
	/**
	 * Route After
	 */
	async void onRouteAfter()
	{
		/* Set title */
		if (this.action == "index")
		{
			this.layout.setPageTitle("List of domains");
		}
		else if (this.action == "edit")
		{
			DomainFormModel form = this.getWidget("form");
			this.layout.setPageTitle(form.getPageTitle("edit"));
		}
	}
}