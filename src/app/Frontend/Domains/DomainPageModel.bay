/*!
 *  Bayrell Cloud OS
 *
 *  (c) Copyright 2020-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Bayrell.CloudOS.Frontend.Domains;

use Runtime.Web.PageModel;
use Runtime.Web.RenderContainer;
use Runtime.Widget.RenderListModel;
use Runtime.Widget.Crud.CrudPageModel;
use Bayrell.CloudOS.Frontend.Domains.DomainFormModel;
use Bayrell.CloudOS.Frontend.Domains.DomainTableModel;
use Bayrell.CloudOS.Frontend.Routes.RouteTableModel;


class DomainPageModel extends CrudPageModel
{
	/**
	 * Init widget settings
	 */
	void initWidget()
	{
		parent();
		
		if (this.layout.route.name == "app:domains:index")
		{
			/* Set action */
			this.setAction("index");
			
			/* Create table widget */
			DomainTableModel table = this.addWidget(classof DomainTableModel);
			this.render_list.addItem(table);
		}
		
		else if (this.layout.route.name == "app:domains:edit")
		{
			/* Set action */
			this.setAction("edit");
			
			/* Create form widget */
			DomainFormModel form = this.addWidget(classof DomainFormModel, {
				"action": "edit"
			});
			
			/* Set primary key for id */
			form.storage.setPrimaryKey({
				"id": this.layout.route.matches.get("id"),
			});
			
			/* Add form to render list */
			this.getWidget("render_list").addItem(form);
			
			/* Create routes table widget */
			RouteTableModel route_table = this.addWidget(
				classof RouteTableModel,
				{
					"widget_name": "route_table",
					"title": "Routes",
				}
			);
			route_table.storage.setPage(1);
			
			/* Add table to render list */
			this.getWidget("render_list").addItem(route_table);
			
			/* Set foreign key */
			int id = this.layout.route.matches.get("id");
			route_table.storage.setForeignKey("domain_id", id);
			route_table.getWidget("form").storage.setForeignKey("domain_id", id);
			route_table.getWidget("form").removeField("domain_id");
		}
	}
	
	
	/**
	 * Build title
	 */
	void buildTitle(RenderContainer container)
	{
		/* Set title */
		if (this.action == "index")
		{
			this.layout.setPageTitle("List of domains");
		}
		else if (this.action == "edit")
		{
			DomainFormModel form = this.getWidget("form");
			this.layout.setPageTitle(form.getPageTitle("edit"));
		}
	}
}