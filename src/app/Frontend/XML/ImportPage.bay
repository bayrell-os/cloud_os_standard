<!--
 *  Bayrell Cloud OS
 *
 *  (c) Copyright 2020 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
-->

<class name="Bayrell.CloudOS.Frontend.XML.ImportPage">

<use name="Runtime.Widget.Button" component="true" />
<use name="Runtime.Widget.TextArea" component="true" />
<use name="Bayrell.Admin.Components.CloudOS.ImportPageModel" />


<style>
.web_form__buttons{
	padding-top: 10px;
	text-align: center;
}
.web_form__result{
	text-align: center;
	margin-top: var(--widget-space);
}
.web_form__result--success{
	color: var(--widget-color-success);
}
.web_form__result--error{
	color: var(--widget-color-danger);
}
.web_form__result--hide{
	display: none;
}
</style>


<template>
	<div class="import_xml_page">
		<TextArea value={{ this.model.content }}
			@event:onChange={{ this.onChange }}
		/>
		<div class="web_form__buttons">
			<Button styles=["success", "large"]
				@event:onClick={{ this.onImportClick }}>Import</Button>
		</div>
		<div class="web_form__result" class={{ this.getErrorClass() }}>
			{{ this.model.error.message }}
		</div>
	</div>
</template>


<script>

/**
 * Returns form class
 */
string getErrorClass()
{
	if (this.model.error.message == "") return "web_form__result--hide";
	if (this.model.error.code > 0) return "web_form__result--success";
	if (this.model.error.code < 0) return "web_form__result--error";
	return "";
}


/**
 * Import click
 */
async void onImportClick()
{
	await this.model.doImport();
}


/**
 * Change item
 */
void onChange(var e)
{
	this.model.content = e.target.value;
}

</script>


</class>