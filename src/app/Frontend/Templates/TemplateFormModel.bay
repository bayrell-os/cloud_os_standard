/*!
 *  Bayrell Cloud OS
 *
 *  (c) Copyright 2020-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Bayrell.CloudOS.Frontend.Templates;

use Runtime.Callback;
use Runtime.Widget.ButtonModel;
use Runtime.Widget.Input;
use Runtime.Widget.RowButtons;
use Runtime.Widget.RowButtonsModel;
use Runtime.Widget.Crud.CrudApiStorage;
use Runtime.Widget.Form.FormModel;


class TemplateFormModel extends FormModel
{
	/**
	 * Create data storage
	 */
	CrudApiStorage createDataStorage() => new CrudApiStorage{
		"layout": this.layout,
		"class_name": "app.template",
		"primary_keys": ["id"],
	};
	
	
	/**
	 * Init widget settings
	 */
	void initWidget()
	{
		parent();
		
		/* Field name */
		this.addField({
			"label": "Name",
			"name": "name",
			"component": classof Input,
		});
		
		/* Field uid */
		this.addField({
			"label": "UID",
			"name": "uid",
			"component": classof Input,
		});
		
		if (this.action == "edit")
		{
			this.top_buttons.addWidget(
				classof ButtonModel,
				{
					"content": "Back",
					"styles": [
						"default",
					],
					"href": this.layout.url("app:templates:index"),
				}
			);
			
			ButtonModel save_button = this.bottom_buttons.addWidget(
				classof ButtonModel,
				{
					"content": "Save",
					"styles": [
						"primary",
						"large",
					],
				}
			);
			save_button.events.add("onClick", new Callback(this, "save"));
			
			/* Set primary key for id */
			this.storage.setPrimaryKey({
				"id": this.layout.route.matches.get("id"),
			});
		}
	}
	
	
	/**
	 * Get page title
	 */
	string getPageTitle(string action = "")
	{
		if (action == "edit")
		{
			return "Edit " ~ this.storage.item.get("name");
		}
		if (action == "delete")
		{
			return "Delete " ~ this.storage.item.get("name");
		}
		return "";
	}
}