/*!
 *  Bayrell Cloud OS
 *
 *  (c) Copyright 2020-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Bayrell.CloudOS.Frontend.Templates;

use Runtime.Web.PageModel;
use Runtime.Widget.Crud.CrudPageModel;
use Bayrell.CloudOS.Frontend.Templates.TemplateFormModel;
use Bayrell.CloudOS.Frontend.Templates.TemplateTableModel;
use Bayrell.CloudOS.Frontend.Templates.VersionTableModel;


class TemplatePageModel extends CrudPageModel
{
	/**
	 * Constructor
	 */
	void constructor(Dict params = null)
	{
		parent(params);
		
		if (this.layout.route.name == "app:templates:index")
		{
			/* Set action */
			this.setAction("index");
			
			/* Create table widget */
			TemplateTableModel table = new TemplateTableModel{
				"parent_widget": this
			};
			
			/* Set page */
			table.storage.setPage(this.layout.request_query.get("page", 1));
		}
		
		else if (this.layout.route.name == "app:templates:edit")
		{
			/* Set action */
			this.setAction("edit");
			
			/* Create form widget */
			TemplateFormModel form = new TemplateFormModel{
				"action": "edit",
				"parent_widget": this
			};
			
			/* Create versions table widget */
			VersionTableModel version_table = new VersionTableModel{
				"parent_widget": this,
				"widget_name": "version_table",
			};
			version_table.storage.setPage(1);
			
			/* Add table to render list */
			this.getWidget("render_list").addRender(version_table);
			
			/* Set space id */
			int id = this.layout.route.matches.get("id");
			version_table.storage.setForeignKey("template_id", id);
			version_table.getWidget("form").storage.setForeignKey("template_id", id);
		}
	}
	
	
	/**
	 * Route After
	 */
	async void onRouteAfter()
	{
		/* Set title */
		if (this.action == "index")
		{
			this.layout.setPageTitle("List of templates");
		}
		else if (this.action == "edit")
		{
			TemplateFormModel form = this.getWidget("form");
			this.layout.setPageTitle(form.getPageTitle("edit"));
		}
	}
}