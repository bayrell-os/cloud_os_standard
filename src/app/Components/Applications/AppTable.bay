<!--
 *  Bayrell Cloud OS
 *
 *  (c) Copyright 2020-2023 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
-->

<class name="Bayrell.CloudOS.Components.Applications.AppTable"
    extends="Runtime.Widget.Table.TableDialog">


<use name="Runtime.Web.Layout" />
<use name="Runtime.Web.ModelProxy" />
<use name="Runtime.Web.Events.MouseClickEvent" />
<use name="Runtime.Widget.Button" />
<use name="Runtime.Widget.Message" />
<use name="Runtime.Widget.Dialog.DialogEvent" />
<use name="Runtime.Widget.Crud.CrudWidget" />
<use name="Runtime.Widget.Tab.Tabs" component="true" />
<use name="Runtime.Widget.Tab.TabItem" component="true" />
<use name="Runtime.Widget.TopButtons" component="true" />
<use name="Bayrell.CloudOS.Components.Applications.AppTableModel" />
<use name="Bayrell.CloudOS.Components.Applications.ServiceInfoComponent" component="true" />


<style>
.app_table %(Tabs)tabs, .app_table %(ServiceInfoComponent)service_info{
	display: inline-block;
	vertical-align: top;
}
.web_table tr.web_table__row_item{
	cursor: pointer;
}
</style>


<template name="renderTop">
	<TopButtons @model=[] />
</template>


<template name="renderField" args="int row_number, FieldInfo field, Dict item">
	
	%if (field.name == "service_name")
	{
		{{ item["stack_name"] ~ "_" ~ item["name"] }}
	}
	
	%elseif (field.name == "replicas")
	{
		%if (item["status"] == 1)
		{
			%set int count_work = (int)item.get("count_work") |> default int 0;
			%set int count_total = (int)item.get("count_total") |> default int 0;
			{{ count_work ~ "/" ~ count_total }}
		}
	}
	
	%elseif (field.name == "admin_button")
	{
		%set int is_admin = (int)item.get("is_admin") |> default bool false;
		%if (is_admin)
		{
			%set string service_name = item.get("stack_name") ~ "_" ~ item.get("name");
			<Button type="small"
				href={{ "/applications/admin/" ~ service_name ~ "/ "}}
			>Admin</Button>
		}
		%else
		{
			{{ "No" }}
		}
	}
	
	%elseif (field.name == "row_buttons")
	{
		%set CrudWidget parent_model = model.getParentWidget(layout);
		%set string href_edit = parent_model.getRouteHref("edit", {"item": item});
		
		<div class="web_table__td_row_buttons">
			<Button type="small" href={{ href_edit }}>
				Edit
			</Button>
			<Button type="danger small"
				@event:MouseClickEvent="onDeleteClick"
				data-item={{ item }} data-pos={{ row_number }}>Delete</Button>
		</div>
	}
	
	%else
	{
		%render parent::renderField(row_number, field, item);
	}
	
</template>


<template name="renderTable">
	
	%set CrudWidget parent_model = model.getParentWidget(layout);
	%set Collection parent_model_path = layout.getWidgetGlobalPath(parent_model.widget_path);
	%set Collection tabs_model_path = parent_model_path.concat(["tabs"]);
	
	<div class="app_table">
	
		<Tabs @global={{ tabs_model_path }} style=["style1"] tabs=[
			{
				"name": "run",
				"label": "Run",
				"href": static::url("app:applications:index", {"status": "run"}),
			},
			{
				"name": "stop",
				"label": "Stoped",
				"href": static::url("app:applications:index", {"status": "stop"}),
			},
		]>
			<TabItem name="run" @global={{ tabs_model_path }}>
				%render parent::renderTable();
			</TabItem>
			<TabItem name="stop" @global={{ tabs_model_path }}>
				%render parent::renderTable();
			</TabItem>
		</Tabs>
		
		<ServiceInfoComponent @model=["widgets", "service_info"] />
	
	</div>
	
</template>


<script>


/**
 * Row click
 */
async void onRowClick(Message<MouseClickEvent> msg)
{
	ModelProxy model = this.proxy();
	int row_number = msg.sender.params.get("data-row-number");
	model.proxy("data").commit("setSelected", row_number);
	
	/* Load data */
	Dict item = model.data(["data", "items", row_number]);
	
	/* Update service name */
	await model.proxy(["widgets", "service_info"]).commitAsync("updateService", item);
}


/**
 * Save dialog event
 */
async void onSaveDialogEvent(Message<DialogEvent> msg)
{
	ModelProxy parent_model = this.proxyParentWidget();
	ModelProxy form = parent_model.proxy(["widgets", "form"]);
	
	await parent::onSaveDialogEvent(msg);
	
	/* Save item */
	if (msg.event.button_result == "yes")
	{
		/* Check if success */
		if (form.proxy("data").call("isSuccess"))
		{
			Dict item = form.proxy("data").data("item");
			int id = item["id"];
			string url = static::url("app:applications:edit", {"id": id});
			document.location = url;
		}
	}
	
}

</script>


</class>