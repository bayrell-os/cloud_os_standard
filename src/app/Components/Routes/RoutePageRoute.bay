/*!
 *  Bayrell Cloud OS
 *
 *  (c) Copyright 2020-2023 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Bayrell.CloudOS.Components.Routes;

use Runtime.Web.RouteInfo;
use Runtime.Web.Crud.CrudRoute;
use Bayrell.CloudOS.Components.Routes.RouteDeletePage;
use Bayrell.CloudOS.Components.Routes.RoutePageModel;
use Bayrell.CloudOS.Components.Routes.RouteSavePage;
use Bayrell.CloudOS.Components.Routes.RouteTablePage;


class RoutePageRoute extends CrudRoute
{
	
	/**
	 * Returns routes
	 */
	pure Collection<RouteInfo> getRoutes() =>
	[
		new RouteInfo
		{
			"uri": "/routes/",
			"name": "app:routes:index",
			"method": "actionIndex",
		},
		new RouteInfo
		{
			"uri": "/routes/add/",
			"name": "app:routes:add",
			"method": "actionAdd",
		},
		new RouteInfo
		{
			"uri": "/routes/{id}/",
			"name": "app:routes:edit",
			"method": "actionEdit",
		},
		new RouteInfo
		{
			"uri": "/routes/{id}/delete/",
			"name": "app:routes:delete",
			"method": "actionDelete",
		},
	];
	
	
	/**
	 * Returns id field name
	 */
	pure string getFieldNameId() => "id";
	
	
	/**
	 * Returns layout name
	 */
	string getLayoutName() => "default";
	
	
	/**
	 * Returns page model
	 */
	string getPageModelName() => classof RoutePageModel;
	
	
	/**
	 * Returns index page name
	 */
	string getIndexPageName() => classof RouteTablePage;
	
	
	/**
	 * Returns save page name
	 */
	string getSavePageName() => classof RouteSavePage;
	
	
	/**
	 * Returns delete page name
	 */
	string getDeletePageName() => classof RouteDeletePage;
	
}